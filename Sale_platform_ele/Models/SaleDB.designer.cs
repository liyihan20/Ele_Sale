#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18444
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Sale_platform_ele.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SaleOrder_platform_ele")]
	public partial class SaleDBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertAuthority(Authority instance);
    partial void UpdateAuthority(Authority instance);
    partial void DeleteAuthority(Authority instance);
    partial void InsertDepartment(Department instance);
    partial void UpdateDepartment(Department instance);
    partial void DeleteDepartment(Department instance);
    partial void InsertGroup(Group instance);
    partial void UpdateGroup(Group instance);
    partial void DeleteGroup(Group instance);
    partial void InsertGroupAndAuth(GroupAndAuth instance);
    partial void UpdateGroupAndAuth(GroupAndAuth instance);
    partial void DeleteGroupAndAuth(GroupAndAuth instance);
    partial void InsertGroupAndUser(GroupAndUser instance);
    partial void UpdateGroupAndUser(GroupAndUser instance);
    partial void DeleteGroupAndUser(GroupAndUser instance);
    partial void InsertLoginLog(LoginLog instance);
    partial void UpdateLoginLog(LoginLog instance);
    partial void DeleteLoginLog(LoginLog instance);
    partial void InsertUser(User instance);
    partial void UpdateUser(User instance);
    partial void DeleteUser(User instance);
    partial void InsertAuditorsRelation(AuditorsRelation instance);
    partial void UpdateAuditorsRelation(AuditorsRelation instance);
    partial void DeleteAuditorsRelation(AuditorsRelation instance);
    partial void InsertProcessDetail(ProcessDetail instance);
    partial void UpdateProcessDetail(ProcessDetail instance);
    partial void DeleteProcessDetail(ProcessDetail instance);
    partial void InsertProcess(Process instance);
    partial void UpdateProcess(Process instance);
    partial void DeleteProcess(Process instance);
    partial void InsertCommissionRateDetail(CommissionRateDetail instance);
    partial void UpdateCommissionRateDetail(CommissionRateDetail instance);
    partial void DeleteCommissionRateDetail(CommissionRateDetail instance);
    partial void InsertBackupData(BackupData instance);
    partial void UpdateBackupData(BackupData instance);
    partial void DeleteBackupData(BackupData instance);
    partial void InsertCommissionRate(CommissionRate instance);
    partial void UpdateCommissionRate(CommissionRate instance);
    partial void DeleteCommissionRate(CommissionRate instance);
    #endregion
		
		public SaleDBDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["SaleOrder_platform_eleConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public SaleDBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaleDBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaleDBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public SaleDBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Authority> Authority
		{
			get
			{
				return this.GetTable<Authority>();
			}
		}
		
		public System.Data.Linq.Table<Department> Department
		{
			get
			{
				return this.GetTable<Department>();
			}
		}
		
		public System.Data.Linq.Table<Group> Group
		{
			get
			{
				return this.GetTable<Group>();
			}
		}
		
		public System.Data.Linq.Table<GroupAndAuth> GroupAndAuth
		{
			get
			{
				return this.GetTable<GroupAndAuth>();
			}
		}
		
		public System.Data.Linq.Table<GroupAndUser> GroupAndUser
		{
			get
			{
				return this.GetTable<GroupAndUser>();
			}
		}
		
		public System.Data.Linq.Table<LoginLog> LoginLog
		{
			get
			{
				return this.GetTable<LoginLog>();
			}
		}
		
		public System.Data.Linq.Table<User> User
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<AuditorsRelation> AuditorsRelation
		{
			get
			{
				return this.GetTable<AuditorsRelation>();
			}
		}
		
		public System.Data.Linq.Table<vwAuditorRelations> vwAuditorRelations
		{
			get
			{
				return this.GetTable<vwAuditorRelations>();
			}
		}
		
		public System.Data.Linq.Table<vwItems> vwItems
		{
			get
			{
				return this.GetTable<vwItems>();
			}
		}
		
		public System.Data.Linq.Table<ProcessDetail> ProcessDetail
		{
			get
			{
				return this.GetTable<ProcessDetail>();
			}
		}
		
		public System.Data.Linq.Table<Process> Process
		{
			get
			{
				return this.GetTable<Process>();
			}
		}
		
		public System.Data.Linq.Table<CommissionRateDetail> CommissionRateDetail
		{
			get
			{
				return this.GetTable<CommissionRateDetail>();
			}
		}
		
		public System.Data.Linq.Table<BackupData> BackupData
		{
			get
			{
				return this.GetTable<BackupData>();
			}
		}
		
		public System.Data.Linq.Table<CommissionRate> CommissionRate
		{
			get
			{
				return this.GetTable<CommissionRate>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_authority")]
	public partial class Authority : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private string _sname;
		
		private EntitySet<GroupAndAuth> _GroupAndAuth;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    partial void OnsnameChanging(string value);
    partial void OnsnameChanged();
    #endregion
		
		public Authority()
		{
			this._GroupAndAuth = new EntitySet<GroupAndAuth>(new Action<GroupAndAuth>(this.attach_GroupAndAuth), new Action<GroupAndAuth>(this.detach_GroupAndAuth));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sname", DbType="VarChar(20)")]
		public string sname
		{
			get
			{
				return this._sname;
			}
			set
			{
				if ((this._sname != value))
				{
					this.OnsnameChanging(value);
					this.SendPropertyChanging();
					this._sname = value;
					this.SendPropertyChanged("sname");
					this.OnsnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Authority_GroupAndAuth", Storage="_GroupAndAuth", ThisKey="id", OtherKey="auth_id")]
		public EntitySet<GroupAndAuth> GroupAndAuth
		{
			get
			{
				return this._GroupAndAuth;
			}
			set
			{
				this._GroupAndAuth.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupAndAuth(GroupAndAuth entity)
		{
			this.SendPropertyChanging();
			entity.Authority = this;
		}
		
		private void detach_GroupAndAuth(GroupAndAuth entity)
		{
			this.SendPropertyChanging();
			entity.Authority = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_department")]
	public partial class Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private System.Nullable<int> _dep_no;
		
		private string _dep_type;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Ondep_noChanging(System.Nullable<int> value);
    partial void Ondep_noChanged();
    partial void Ondep_typeChanging(string value);
    partial void Ondep_typeChanged();
    #endregion
		
		public Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(100)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dep_no", DbType="Int")]
		public System.Nullable<int> dep_no
		{
			get
			{
				return this._dep_no;
			}
			set
			{
				if ((this._dep_no != value))
				{
					this.Ondep_noChanging(value);
					this.SendPropertyChanging();
					this._dep_no = value;
					this.SendPropertyChanged("dep_no");
					this.Ondep_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dep_type", DbType="VarChar(50)")]
		public string dep_type
		{
			get
			{
				return this._dep_type;
			}
			set
			{
				if ((this._dep_type != value))
				{
					this.Ondep_typeChanging(value);
					this.SendPropertyChanging();
					this._dep_type = value;
					this.SendPropertyChanged("dep_type");
					this.Ondep_typeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_group")]
	public partial class Group : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _name;
		
		private string _description;
		
		private EntitySet<GroupAndAuth> _GroupAndAuth;
		
		private EntitySet<GroupAndUser> _GroupAndUser;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Group()
		{
			this._GroupAndAuth = new EntitySet<GroupAndAuth>(new Action<GroupAndAuth>(this.attach_GroupAndAuth), new Action<GroupAndAuth>(this.detach_GroupAndAuth));
			this._GroupAndUser = new EntitySet<GroupAndUser>(new Action<GroupAndUser>(this.attach_GroupAndUser), new Action<GroupAndUser>(this.detach_GroupAndUser));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50)")]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="VarChar(200)")]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAndAuth", Storage="_GroupAndAuth", ThisKey="id", OtherKey="group_id")]
		public EntitySet<GroupAndAuth> GroupAndAuth
		{
			get
			{
				return this._GroupAndAuth;
			}
			set
			{
				this._GroupAndAuth.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAndUser", Storage="_GroupAndUser", ThisKey="id", OtherKey="group_id")]
		public EntitySet<GroupAndUser> GroupAndUser
		{
			get
			{
				return this._GroupAndUser;
			}
			set
			{
				this._GroupAndUser.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupAndAuth(GroupAndAuth entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupAndAuth(GroupAndAuth entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
		
		private void attach_GroupAndUser(GroupAndUser entity)
		{
			this.SendPropertyChanging();
			entity.Group = this;
		}
		
		private void detach_GroupAndUser(GroupAndUser entity)
		{
			this.SendPropertyChanging();
			entity.Group = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_groupAndAuth")]
	public partial class GroupAndAuth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _group_id;
		
		private System.Nullable<int> _auth_id;
		
		private EntityRef<Authority> _Authority;
		
		private EntityRef<Group> _Group;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongroup_idChanging(System.Nullable<int> value);
    partial void Ongroup_idChanged();
    partial void Onauth_idChanging(System.Nullable<int> value);
    partial void Onauth_idChanged();
    #endregion
		
		public GroupAndAuth()
		{
			this._Authority = default(EntityRef<Authority>);
			this._Group = default(EntityRef<Group>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Int")]
		public System.Nullable<int> group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auth_id", DbType="Int")]
		public System.Nullable<int> auth_id
		{
			get
			{
				return this._auth_id;
			}
			set
			{
				if ((this._auth_id != value))
				{
					if (this._Authority.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onauth_idChanging(value);
					this.SendPropertyChanging();
					this._auth_id = value;
					this.SendPropertyChanged("auth_id");
					this.Onauth_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Authority_GroupAndAuth", Storage="_Authority", ThisKey="auth_id", OtherKey="id", IsForeignKey=true)]
		public Authority Authority
		{
			get
			{
				return this._Authority.Entity;
			}
			set
			{
				Authority previousValue = this._Authority.Entity;
				if (((previousValue != value) 
							|| (this._Authority.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Authority.Entity = null;
						previousValue.GroupAndAuth.Remove(this);
					}
					this._Authority.Entity = value;
					if ((value != null))
					{
						value.GroupAndAuth.Add(this);
						this._auth_id = value.id;
					}
					else
					{
						this._auth_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Authority");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAndAuth", Storage="_Group", ThisKey="group_id", OtherKey="id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupAndAuth.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupAndAuth.Add(this);
						this._group_id = value.id;
					}
					else
					{
						this._group_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_groupAndUser")]
	public partial class GroupAndUser : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _group_id;
		
		private System.Nullable<int> _user_id;
		
		private EntityRef<Group> _Group;
		
		private EntityRef<User> _User;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Ongroup_idChanging(System.Nullable<int> value);
    partial void Ongroup_idChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    #endregion
		
		public GroupAndUser()
		{
			this._Group = default(EntityRef<Group>);
			this._User = default(EntityRef<User>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_group_id", DbType="Int")]
		public System.Nullable<int> group_id
		{
			get
			{
				return this._group_id;
			}
			set
			{
				if ((this._group_id != value))
				{
					if (this._Group.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Ongroup_idChanging(value);
					this.SendPropertyChanging();
					this._group_id = value;
					this.SendPropertyChanged("group_id");
					this.Ongroup_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Group_GroupAndUser", Storage="_Group", ThisKey="group_id", OtherKey="id", IsForeignKey=true)]
		public Group Group
		{
			get
			{
				return this._Group.Entity;
			}
			set
			{
				Group previousValue = this._Group.Entity;
				if (((previousValue != value) 
							|| (this._Group.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Group.Entity = null;
						previousValue.GroupAndUser.Remove(this);
					}
					this._Group.Entity = value;
					if ((value != null))
					{
						value.GroupAndUser.Add(this);
						this._group_id = value.id;
					}
					else
					{
						this._group_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("Group");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupAndUser", Storage="_User", ThisKey="user_id", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.GroupAndUser.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.GroupAndUser.Add(this);
						this._user_id = value.id;
					}
					else
					{
						this._user_id = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_login_log")]
	public partial class LoginLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private System.Nullable<System.DateTime> _login_time;
		
		private string _ip;
		
		private System.Nullable<bool> _suc;
		
		private string _login_log;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onlogin_timeChanging(System.Nullable<System.DateTime> value);
    partial void Onlogin_timeChanged();
    partial void OnipChanging(string value);
    partial void OnipChanged();
    partial void OnsucChanging(System.Nullable<bool> value);
    partial void OnsucChanged();
    partial void Onlogin_logChanging(string value);
    partial void Onlogin_logChanged();
    #endregion
		
		public LoginLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(50)")]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_time", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> login_time
		{
			get
			{
				return this._login_time;
			}
			set
			{
				if ((this._login_time != value))
				{
					this.Onlogin_timeChanging(value);
					this.SendPropertyChanging();
					this._login_time = value;
					this.SendPropertyChanged("login_time");
					this.Onlogin_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip", DbType="VarChar(50)")]
		public string ip
		{
			get
			{
				return this._ip;
			}
			set
			{
				if ((this._ip != value))
				{
					this.OnipChanging(value);
					this.SendPropertyChanging();
					this._ip = value;
					this.SendPropertyChanged("ip");
					this.OnipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_suc", DbType="Bit")]
		public System.Nullable<bool> suc
		{
			get
			{
				return this._suc;
			}
			set
			{
				if ((this._suc != value))
				{
					this.OnsucChanging(value);
					this.SendPropertyChanging();
					this._suc = value;
					this.SendPropertyChanged("suc");
					this.OnsucChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_login_log", DbType="VarChar(200)")]
		public string login_log
		{
			get
			{
				return this._login_log;
			}
			set
			{
				if ((this._login_log != value))
				{
					this.Onlogin_logChanging(value);
					this.SendPropertyChanging();
					this._login_log = value;
					this.SendPropertyChanged("login_log");
					this.Onlogin_logChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_user")]
	public partial class User : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _real_name;
		
		private string _password;
		
		private string _email;
		
		private System.Nullable<int> _department_no;
		
		private bool _is_forbit;
		
		private System.Nullable<System.DateTime> _in_date;
		
		private System.Nullable<System.DateTime> _forbit_date;
		
		private string _forbit_reason;
		
		private System.Nullable<System.DateTime> _last_login_date;
		
		private System.Nullable<int> _error_times;
		
		private EntitySet<GroupAndUser> _GroupAndUser;
		
		private EntitySet<ProcessDetail> _ProcessDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void Onreal_nameChanging(string value);
    partial void Onreal_nameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Ondepartment_noChanging(System.Nullable<int> value);
    partial void Ondepartment_noChanged();
    partial void Onis_forbitChanging(bool value);
    partial void Onis_forbitChanged();
    partial void Onin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onin_dateChanged();
    partial void Onforbit_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onforbit_dateChanged();
    partial void Onforbit_reasonChanging(string value);
    partial void Onforbit_reasonChanged();
    partial void Onlast_login_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onlast_login_dateChanged();
    partial void Onerror_timesChanging(System.Nullable<int> value);
    partial void Onerror_timesChanged();
    #endregion
		
		public User()
		{
			this._GroupAndUser = new EntitySet<GroupAndUser>(new Action<GroupAndUser>(this.attach_GroupAndUser), new Action<GroupAndUser>(this.detach_GroupAndUser));
			this._ProcessDetail = new EntitySet<ProcessDetail>(new Action<ProcessDetail>(this.attach_ProcessDetail), new Action<ProcessDetail>(this.detach_ProcessDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_real_name", DbType="VarChar(40)")]
		public string real_name
		{
			get
			{
				return this._real_name;
			}
			set
			{
				if ((this._real_name != value))
				{
					this.Onreal_nameChanging(value);
					this.SendPropertyChanging();
					this._real_name = value;
					this.SendPropertyChanged("real_name");
					this.Onreal_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(32)")]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(200)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_no", DbType="Int")]
		public System.Nullable<int> department_no
		{
			get
			{
				return this._department_no;
			}
			set
			{
				if ((this._department_no != value))
				{
					this.Ondepartment_noChanging(value);
					this.SendPropertyChanging();
					this._department_no = value;
					this.SendPropertyChanged("department_no");
					this.Ondepartment_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_is_forbit", DbType="Bit NOT NULL")]
		public bool is_forbit
		{
			get
			{
				return this._is_forbit;
			}
			set
			{
				if ((this._is_forbit != value))
				{
					this.Onis_forbitChanging(value);
					this.SendPropertyChanging();
					this._is_forbit = value;
					this.SendPropertyChanged("is_forbit");
					this.Onis_forbitChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_in_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> in_date
		{
			get
			{
				return this._in_date;
			}
			set
			{
				if ((this._in_date != value))
				{
					this.Onin_dateChanging(value);
					this.SendPropertyChanging();
					this._in_date = value;
					this.SendPropertyChanged("in_date");
					this.Onin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forbit_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> forbit_date
		{
			get
			{
				return this._forbit_date;
			}
			set
			{
				if ((this._forbit_date != value))
				{
					this.Onforbit_dateChanging(value);
					this.SendPropertyChanging();
					this._forbit_date = value;
					this.SendPropertyChanged("forbit_date");
					this.Onforbit_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_forbit_reason", DbType="VarChar(200)")]
		public string forbit_reason
		{
			get
			{
				return this._forbit_reason;
			}
			set
			{
				if ((this._forbit_reason != value))
				{
					this.Onforbit_reasonChanging(value);
					this.SendPropertyChanging();
					this._forbit_reason = value;
					this.SendPropertyChanged("forbit_reason");
					this.Onforbit_reasonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_last_login_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> last_login_date
		{
			get
			{
				return this._last_login_date;
			}
			set
			{
				if ((this._last_login_date != value))
				{
					this.Onlast_login_dateChanging(value);
					this.SendPropertyChanging();
					this._last_login_date = value;
					this.SendPropertyChanged("last_login_date");
					this.Onlast_login_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_error_times", DbType="Int")]
		public System.Nullable<int> error_times
		{
			get
			{
				return this._error_times;
			}
			set
			{
				if ((this._error_times != value))
				{
					this.Onerror_timesChanging(value);
					this.SendPropertyChanging();
					this._error_times = value;
					this.SendPropertyChanged("error_times");
					this.Onerror_timesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_GroupAndUser", Storage="_GroupAndUser", ThisKey="id", OtherKey="user_id")]
		public EntitySet<GroupAndUser> GroupAndUser
		{
			get
			{
				return this._GroupAndUser;
			}
			set
			{
				this._GroupAndUser.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProcessDetail", Storage="_ProcessDetail", ThisKey="id", OtherKey="userId")]
		public EntitySet<ProcessDetail> ProcessDetail
		{
			get
			{
				return this._ProcessDetail;
			}
			set
			{
				this._ProcessDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_GroupAndUser(GroupAndUser entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_GroupAndUser(GroupAndUser entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
		
		private void attach_ProcessDetail(ProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = this;
		}
		
		private void detach_ProcessDetail(ProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.User = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_auditorsRelation")]
	public partial class AuditorsRelation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _step_name;
		
		private System.Nullable<int> _step_value;
		
		private string _relate_type;
		
		private System.Nullable<int> _relate_value;
		
		private System.Nullable<int> _auditor_id;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onstep_nameChanging(string value);
    partial void Onstep_nameChanged();
    partial void Onstep_valueChanging(System.Nullable<int> value);
    partial void Onstep_valueChanged();
    partial void Onrelate_typeChanging(string value);
    partial void Onrelate_typeChanged();
    partial void Onrelate_valueChanging(System.Nullable<int> value);
    partial void Onrelate_valueChanged();
    partial void Onauditor_idChanging(System.Nullable<int> value);
    partial void Onauditor_idChanged();
    #endregion
		
		public AuditorsRelation()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step_name", DbType="VarChar(50)")]
		public string step_name
		{
			get
			{
				return this._step_name;
			}
			set
			{
				if ((this._step_name != value))
				{
					this.Onstep_nameChanging(value);
					this.SendPropertyChanging();
					this._step_name = value;
					this.SendPropertyChanged("step_name");
					this.Onstep_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step_value", DbType="Int")]
		public System.Nullable<int> step_value
		{
			get
			{
				return this._step_value;
			}
			set
			{
				if ((this._step_value != value))
				{
					this.Onstep_valueChanging(value);
					this.SendPropertyChanging();
					this._step_value = value;
					this.SendPropertyChanged("step_value");
					this.Onstep_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relate_type", DbType="VarChar(50)")]
		public string relate_type
		{
			get
			{
				return this._relate_type;
			}
			set
			{
				if ((this._relate_type != value))
				{
					this.Onrelate_typeChanging(value);
					this.SendPropertyChanging();
					this._relate_type = value;
					this.SendPropertyChanged("relate_type");
					this.Onrelate_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relate_value", DbType="Int")]
		public System.Nullable<int> relate_value
		{
			get
			{
				return this._relate_value;
			}
			set
			{
				if ((this._relate_value != value))
				{
					this.Onrelate_valueChanging(value);
					this.SendPropertyChanging();
					this._relate_value = value;
					this.SendPropertyChanged("relate_value");
					this.Onrelate_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auditor_id", DbType="Int")]
		public System.Nullable<int> auditor_id
		{
			get
			{
				return this._auditor_id;
			}
			set
			{
				if ((this._auditor_id != value))
				{
					this.Onauditor_idChanging(value);
					this.SendPropertyChanging();
					this._auditor_id = value;
					this.SendPropertyChanged("auditor_id");
					this.Onauditor_idChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_auditor_relations")]
	public partial class vwAuditorRelations
	{
		
		private int _id;
		
		private string _step_name;
		
		private System.Nullable<int> _step_value;
		
		private string _relate_type;
		
		private System.Nullable<int> _department_id;
		
		private string _department_name;
		
		private System.Nullable<int> _auditor_id;
		
		private string _auditor_name;
		
		public vwAuditorRelations()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL")]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this._id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step_name", DbType="VarChar(50)")]
		public string step_name
		{
			get
			{
				return this._step_name;
			}
			set
			{
				if ((this._step_name != value))
				{
					this._step_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step_value", DbType="Int")]
		public System.Nullable<int> step_value
		{
			get
			{
				return this._step_value;
			}
			set
			{
				if ((this._step_value != value))
				{
					this._step_value = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_relate_type", DbType="VarChar(50)")]
		public string relate_type
		{
			get
			{
				return this._relate_type;
			}
			set
			{
				if ((this._relate_type != value))
				{
					this._relate_type = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_id", DbType="Int")]
		public System.Nullable<int> department_id
		{
			get
			{
				return this._department_id;
			}
			set
			{
				if ((this._department_id != value))
				{
					this._department_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department_name", DbType="VarChar(100)")]
		public string department_name
		{
			get
			{
				return this._department_name;
			}
			set
			{
				if ((this._department_name != value))
				{
					this._department_name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auditor_id", DbType="Int")]
		public System.Nullable<int> auditor_id
		{
			get
			{
				return this._auditor_id;
			}
			set
			{
				if ((this._auditor_id != value))
				{
					this._auditor_id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_auditor_name", DbType="VarChar(40)")]
		public string auditor_name
		{
			get
			{
				return this._auditor_name;
			}
			set
			{
				if ((this._auditor_name != value))
				{
					this._auditor_name = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.vw_items")]
	public partial class vwItems
	{
		
		private string _what;
		
		private int _interid;
		
		private string _fid;
		
		private string _fname;
		
		public vwItems()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_what", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string what
		{
			get
			{
				return this._what;
			}
			set
			{
				if ((this._what != value))
				{
					this._what = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interid", DbType="Int NOT NULL")]
		public int interid
		{
			get
			{
				return this._interid;
			}
			set
			{
				if ((this._interid != value))
				{
					this._interid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fid", DbType="VarChar(255)")]
		public string fid
		{
			get
			{
				return this._fid;
			}
			set
			{
				if ((this._fid != value))
				{
					this._fid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fname", DbType="NVarChar(255)")]
		public string fname
		{
			get
			{
				return this._fname;
			}
			set
			{
				if ((this._fname != value))
				{
					this._fname = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_process_detail")]
	public partial class ProcessDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _processId;
		
		private int _step;
		
		private string _stepName;
		
		private int _stepType;
		
		private System.Nullable<int> _userId;
		
		private System.Nullable<bool> _canModify;
		
		private System.Nullable<bool> _canBeNull;
		
		private System.Nullable<bool> _isCountersign;
		
		private EntityRef<User> _User;
		
		private EntityRef<Process> _Process;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprocessIdChanging(System.Nullable<int> value);
    partial void OnprocessIdChanged();
    partial void OnstepChanging(int value);
    partial void OnstepChanged();
    partial void OnstepNameChanging(string value);
    partial void OnstepNameChanged();
    partial void OnstepTypeChanging(int value);
    partial void OnstepTypeChanged();
    partial void OnuserIdChanging(System.Nullable<int> value);
    partial void OnuserIdChanged();
    partial void OncanModifyChanging(System.Nullable<bool> value);
    partial void OncanModifyChanged();
    partial void OncanBeNullChanging(System.Nullable<bool> value);
    partial void OncanBeNullChanged();
    partial void OnisCountersignChanging(System.Nullable<bool> value);
    partial void OnisCountersignChanged();
    #endregion
		
		public ProcessDetail()
		{
			this._User = default(EntityRef<User>);
			this._Process = default(EntityRef<Process>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_processId", DbType="Int")]
		public System.Nullable<int> processId
		{
			get
			{
				return this._processId;
			}
			set
			{
				if ((this._processId != value))
				{
					if (this._Process.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprocessIdChanging(value);
					this.SendPropertyChanging();
					this._processId = value;
					this.SendPropertyChanged("processId");
					this.OnprocessIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_step", DbType="Int NOT NULL")]
		public int step
		{
			get
			{
				return this._step;
			}
			set
			{
				if ((this._step != value))
				{
					this.OnstepChanging(value);
					this.SendPropertyChanging();
					this._step = value;
					this.SendPropertyChanged("step");
					this.OnstepChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stepName", DbType="VarChar(50)")]
		public string stepName
		{
			get
			{
				return this._stepName;
			}
			set
			{
				if ((this._stepName != value))
				{
					this.OnstepNameChanging(value);
					this.SendPropertyChanging();
					this._stepName = value;
					this.SendPropertyChanged("stepName");
					this.OnstepNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stepType", DbType="Int NOT NULL")]
		public int stepType
		{
			get
			{
				return this._stepType;
			}
			set
			{
				if ((this._stepType != value))
				{
					this.OnstepTypeChanging(value);
					this.SendPropertyChanging();
					this._stepType = value;
					this.SendPropertyChanged("stepType");
					this.OnstepTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_userId", DbType="Int")]
		public System.Nullable<int> userId
		{
			get
			{
				return this._userId;
			}
			set
			{
				if ((this._userId != value))
				{
					if (this._User.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnuserIdChanging(value);
					this.SendPropertyChanging();
					this._userId = value;
					this.SendPropertyChanged("userId");
					this.OnuserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canModify", DbType="Bit")]
		public System.Nullable<bool> canModify
		{
			get
			{
				return this._canModify;
			}
			set
			{
				if ((this._canModify != value))
				{
					this.OncanModifyChanging(value);
					this.SendPropertyChanging();
					this._canModify = value;
					this.SendPropertyChanged("canModify");
					this.OncanModifyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_canBeNull", DbType="Bit")]
		public System.Nullable<bool> canBeNull
		{
			get
			{
				return this._canBeNull;
			}
			set
			{
				if ((this._canBeNull != value))
				{
					this.OncanBeNullChanging(value);
					this.SendPropertyChanging();
					this._canBeNull = value;
					this.SendPropertyChanged("canBeNull");
					this.OncanBeNullChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isCountersign", DbType="Bit")]
		public System.Nullable<bool> isCountersign
		{
			get
			{
				return this._isCountersign;
			}
			set
			{
				if ((this._isCountersign != value))
				{
					this.OnisCountersignChanging(value);
					this.SendPropertyChanging();
					this._isCountersign = value;
					this.SendPropertyChanged("isCountersign");
					this.OnisCountersignChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="User_ProcessDetail", Storage="_User", ThisKey="userId", OtherKey="id", IsForeignKey=true)]
		public User User
		{
			get
			{
				return this._User.Entity;
			}
			set
			{
				User previousValue = this._User.Entity;
				if (((previousValue != value) 
							|| (this._User.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._User.Entity = null;
						previousValue.ProcessDetail.Remove(this);
					}
					this._User.Entity = value;
					if ((value != null))
					{
						value.ProcessDetail.Add(this);
						this._userId = value.id;
					}
					else
					{
						this._userId = default(Nullable<int>);
					}
					this.SendPropertyChanged("User");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Process_ProcessDetail", Storage="_Process", ThisKey="processId", OtherKey="id", IsForeignKey=true)]
		public Process Process
		{
			get
			{
				return this._Process.Entity;
			}
			set
			{
				Process previousValue = this._Process.Entity;
				if (((previousValue != value) 
							|| (this._Process.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Process.Entity = null;
						previousValue.ProcessDetail.Remove(this);
					}
					this._Process.Entity = value;
					if ((value != null))
					{
						value.ProcessDetail.Add(this);
						this._processId = value.id;
					}
					else
					{
						this._processId = default(Nullable<int>);
					}
					this.SendPropertyChanged("Process");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_process")]
	public partial class Process : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _billType;
		
		private System.Nullable<bool> _isUsing;
		
		private System.Nullable<System.DateTime> _modifyTime;
		
		private System.Nullable<System.DateTime> _beginTime;
		
		private System.Nullable<System.DateTime> _endTime;
		
		private string _info;
		
		private EntitySet<ProcessDetail> _ProcessDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnbillTypeChanging(string value);
    partial void OnbillTypeChanged();
    partial void OnisUsingChanging(System.Nullable<bool> value);
    partial void OnisUsingChanged();
    partial void OnmodifyTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnmodifyTimeChanged();
    partial void OnbeginTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnbeginTimeChanged();
    partial void OnendTimeChanging(System.Nullable<System.DateTime> value);
    partial void OnendTimeChanged();
    partial void OninfoChanging(string value);
    partial void OninfoChanged();
    #endregion
		
		public Process()
		{
			this._ProcessDetail = new EntitySet<ProcessDetail>(new Action<ProcessDetail>(this.attach_ProcessDetail), new Action<ProcessDetail>(this.detach_ProcessDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_billType", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string billType
		{
			get
			{
				return this._billType;
			}
			set
			{
				if ((this._billType != value))
				{
					this.OnbillTypeChanging(value);
					this.SendPropertyChanging();
					this._billType = value;
					this.SendPropertyChanged("billType");
					this.OnbillTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isUsing", DbType="Bit")]
		public System.Nullable<bool> isUsing
		{
			get
			{
				return this._isUsing;
			}
			set
			{
				if ((this._isUsing != value))
				{
					this.OnisUsingChanging(value);
					this.SendPropertyChanging();
					this._isUsing = value;
					this.SendPropertyChanged("isUsing");
					this.OnisUsingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_modifyTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> modifyTime
		{
			get
			{
				return this._modifyTime;
			}
			set
			{
				if ((this._modifyTime != value))
				{
					this.OnmodifyTimeChanging(value);
					this.SendPropertyChanging();
					this._modifyTime = value;
					this.SendPropertyChanged("modifyTime");
					this.OnmodifyTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_beginTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> beginTime
		{
			get
			{
				return this._beginTime;
			}
			set
			{
				if ((this._beginTime != value))
				{
					this.OnbeginTimeChanging(value);
					this.SendPropertyChanging();
					this._beginTime = value;
					this.SendPropertyChanged("beginTime");
					this.OnbeginTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_endTime", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> endTime
		{
			get
			{
				return this._endTime;
			}
			set
			{
				if ((this._endTime != value))
				{
					this.OnendTimeChanging(value);
					this.SendPropertyChanging();
					this._endTime = value;
					this.SendPropertyChanged("endTime");
					this.OnendTimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_info", DbType="VarChar(200)")]
		public string info
		{
			get
			{
				return this._info;
			}
			set
			{
				if ((this._info != value))
				{
					this.OninfoChanging(value);
					this.SendPropertyChanging();
					this._info = value;
					this.SendPropertyChanged("info");
					this.OninfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Process_ProcessDetail", Storage="_ProcessDetail", ThisKey="id", OtherKey="processId")]
		public EntitySet<ProcessDetail> ProcessDetail
		{
			get
			{
				return this._ProcessDetail;
			}
			set
			{
				this._ProcessDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProcessDetail(ProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.Process = this;
		}
		
		private void detach_ProcessDetail(ProcessDetail entity)
		{
			this.SendPropertyChanging();
			entity.Process = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_commissionRateDetail")]
	public partial class CommissionRateDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _interid;
		
		private System.Nullable<int> _MU;
		
		private System.Nullable<decimal> _rate_value;
		
		private EntityRef<CommissionRate> _CommissionRate;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OninteridChanging(System.Nullable<int> value);
    partial void OninteridChanged();
    partial void OnMUChanging(System.Nullable<int> value);
    partial void OnMUChanged();
    partial void Onrate_valueChanging(System.Nullable<decimal> value);
    partial void Onrate_valueChanged();
    #endregion
		
		public CommissionRateDetail()
		{
			this._CommissionRate = default(EntityRef<CommissionRate>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_interid", DbType="Int")]
		public System.Nullable<int> interid
		{
			get
			{
				return this._interid;
			}
			set
			{
				if ((this._interid != value))
				{
					if (this._CommissionRate.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OninteridChanging(value);
					this.SendPropertyChanging();
					this._interid = value;
					this.SendPropertyChanged("interid");
					this.OninteridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MU", DbType="Int")]
		public System.Nullable<int> MU
		{
			get
			{
				return this._MU;
			}
			set
			{
				if ((this._MU != value))
				{
					this.OnMUChanging(value);
					this.SendPropertyChanging();
					this._MU = value;
					this.SendPropertyChanged("MU");
					this.OnMUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_rate_value", DbType="Decimal(8,2)")]
		public System.Nullable<decimal> rate_value
		{
			get
			{
				return this._rate_value;
			}
			set
			{
				if ((this._rate_value != value))
				{
					this.Onrate_valueChanging(value);
					this.SendPropertyChanging();
					this._rate_value = value;
					this.SendPropertyChanged("rate_value");
					this.Onrate_valueChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_commissionRate_CommissionRateDetail", Storage="_CommissionRate", ThisKey="interid", OtherKey="id", IsForeignKey=true)]
		public CommissionRate CommissionRate
		{
			get
			{
				return this._CommissionRate.Entity;
			}
			set
			{
				CommissionRate previousValue = this._CommissionRate.Entity;
				if (((previousValue != value) 
							|| (this._CommissionRate.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CommissionRate.Entity = null;
						previousValue.CommissionRateDetail.Remove(this);
					}
					this._CommissionRate.Entity = value;
					if ((value != null))
					{
						value.CommissionRateDetail.Add(this);
						this._interid = value.id;
					}
					else
					{
						this._interid = default(Nullable<int>);
					}
					this.SendPropertyChanged("CommissionRate");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_backup_data")]
	public partial class BackupData : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _sys_no;
		
		private System.Nullable<int> _user_id;
		
		private System.Nullable<System.DateTime> _op_date;
		
		private string _main_data;
		
		private string _secondary_data;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onsys_noChanging(string value);
    partial void Onsys_noChanged();
    partial void Onuser_idChanging(System.Nullable<int> value);
    partial void Onuser_idChanged();
    partial void Onop_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onop_dateChanged();
    partial void Onmain_dataChanging(string value);
    partial void Onmain_dataChanged();
    partial void Onsecondary_dataChanging(string value);
    partial void Onsecondary_dataChanged();
    #endregion
		
		public BackupData()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sys_no", DbType="VarChar(20)")]
		public string sys_no
		{
			get
			{
				return this._sys_no;
			}
			set
			{
				if ((this._sys_no != value))
				{
					this.Onsys_noChanging(value);
					this.SendPropertyChanging();
					this._sys_no = value;
					this.SendPropertyChanged("sys_no");
					this.Onsys_noChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_id", DbType="Int")]
		public System.Nullable<int> user_id
		{
			get
			{
				return this._user_id;
			}
			set
			{
				if ((this._user_id != value))
				{
					this.Onuser_idChanging(value);
					this.SendPropertyChanging();
					this._user_id = value;
					this.SendPropertyChanged("user_id");
					this.Onuser_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_op_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> op_date
		{
			get
			{
				return this._op_date;
			}
			set
			{
				if ((this._op_date != value))
				{
					this.Onop_dateChanging(value);
					this.SendPropertyChanging();
					this._op_date = value;
					this.SendPropertyChanged("op_date");
					this.Onop_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_main_data", DbType="VarChar(MAX)")]
		public string main_data
		{
			get
			{
				return this._main_data;
			}
			set
			{
				if ((this._main_data != value))
				{
					this.Onmain_dataChanging(value);
					this.SendPropertyChanging();
					this._main_data = value;
					this.SendPropertyChanged("main_data");
					this.Onmain_dataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_secondary_data", DbType="VarChar(MAX)")]
		public string secondary_data
		{
			get
			{
				return this._secondary_data;
			}
			set
			{
				if ((this._secondary_data != value))
				{
					this.Onsecondary_dataChanging(value);
					this.SendPropertyChanging();
					this._secondary_data = value;
					this.SendPropertyChanged("secondary_data");
					this.Onsecondary_dataChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Sale_commissionRate")]
	public partial class CommissionRate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _user_name;
		
		private System.Nullable<System.DateTime> _begin_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<System.DateTime> _create_date;
		
		private System.Nullable<System.DateTime> _update_date;
		
		private string _product_type;
		
		private string _comment;
		
		private EntitySet<CommissionRateDetail> _CommissionRateDetail;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onuser_nameChanging(string value);
    partial void Onuser_nameChanged();
    partial void Onbegin_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onbegin_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Oncreate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Oncreate_dateChanged();
    partial void Onupdate_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onupdate_dateChanged();
    partial void Onproduct_typeChanging(string value);
    partial void Onproduct_typeChanged();
    partial void OncommentChanging(string value);
    partial void OncommentChanged();
    #endregion
		
		public CommissionRate()
		{
			this._CommissionRateDetail = new EntitySet<CommissionRateDetail>(new Action<CommissionRateDetail>(this.attach_CommissionRateDetail), new Action<CommissionRateDetail>(this.detach_CommissionRateDetail));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_user_name", DbType="VarChar(50)")]
		public string user_name
		{
			get
			{
				return this._user_name;
			}
			set
			{
				if ((this._user_name != value))
				{
					this.Onuser_nameChanging(value);
					this.SendPropertyChanging();
					this._user_name = value;
					this.SendPropertyChanged("user_name");
					this.Onuser_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_begin_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> begin_date
		{
			get
			{
				return this._begin_date;
			}
			set
			{
				if ((this._begin_date != value))
				{
					this.Onbegin_dateChanging(value);
					this.SendPropertyChanging();
					this._begin_date = value;
					this.SendPropertyChanged("begin_date");
					this.Onbegin_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_create_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> create_date
		{
			get
			{
				return this._create_date;
			}
			set
			{
				if ((this._create_date != value))
				{
					this.Oncreate_dateChanging(value);
					this.SendPropertyChanging();
					this._create_date = value;
					this.SendPropertyChanged("create_date");
					this.Oncreate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_update_date", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> update_date
		{
			get
			{
				return this._update_date;
			}
			set
			{
				if ((this._update_date != value))
				{
					this.Onupdate_dateChanging(value);
					this.SendPropertyChanging();
					this._update_date = value;
					this.SendPropertyChanged("update_date");
					this.Onupdate_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_product_type", DbType="VarChar(100)")]
		public string product_type
		{
			get
			{
				return this._product_type;
			}
			set
			{
				if ((this._product_type != value))
				{
					this.Onproduct_typeChanging(value);
					this.SendPropertyChanging();
					this._product_type = value;
					this.SendPropertyChanged("product_type");
					this.Onproduct_typeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_comment", DbType="VarChar(500)")]
		public string comment
		{
			get
			{
				return this._comment;
			}
			set
			{
				if ((this._comment != value))
				{
					this.OncommentChanging(value);
					this.SendPropertyChanging();
					this._comment = value;
					this.SendPropertyChanged("comment");
					this.OncommentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Sale_commissionRate_CommissionRateDetail", Storage="_CommissionRateDetail", ThisKey="id", OtherKey="interid")]
		public EntitySet<CommissionRateDetail> CommissionRateDetail
		{
			get
			{
				return this._CommissionRateDetail;
			}
			set
			{
				this._CommissionRateDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CommissionRateDetail(CommissionRateDetail entity)
		{
			this.SendPropertyChanging();
			entity.CommissionRate = this;
		}
		
		private void detach_CommissionRateDetail(CommissionRateDetail entity)
		{
			this.SendPropertyChanging();
			entity.CommissionRate = null;
		}
	}
}
#pragma warning restore 1591
